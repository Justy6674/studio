rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own user preferences
    match /user_preferences/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own hydration data
    match /users/{userId}/hydration/{date} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own body metrics
    match /body_metrics/{userId}/measurements/{measurementId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own subscriptions
    match /subscriptions/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can write their own analytics events (read not needed for privacy)
    match /analytics_events/{eventId} {
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Users can read and write their own badges
    match /user_badges/{badgeId} {
      allow read, write: if request.auth != null && badgeId.matches(request.auth.uid + '_.*');
    }
    
    // Legacy hydration_logs collection (some functions still use this)
    match /hydration_logs/{logId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
} 